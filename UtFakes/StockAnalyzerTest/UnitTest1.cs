using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using VS.UTFakes;
using Microsoft.QualityTools.Testing.Fakes;

namespace StockAnalyzer.Test
{
    /// <summary>
    /// stubs inject interface
    /// </summary>
    [TestClass]
    public class UnitTest1
    {
        /// <summary>
        /// 实现一个interface fake
        /// </summary>
        [TestMethod]
        public void TestContosoStockPrice()
        {
            // Arrange:
            int i = 1;
            // Create the fake stockFeed:
            var stockFeed =
                 new VS.UTFakes.Fakes.StubIStockFeed() // Generated by Fakes.
                 {
                     // Define each method:
                     // Name is original name + parameter types:
                     GetSharePriceString = (s) => { return 1234; },
                     PriceGet = () => { return i;},
                     PriceSetInt32 = (s) => { i = s; },
                     
                 };
            stockFeed.GetValueOf1<int>(() => { return 5; });
            //easy to unstood,

            // In the completed application, stockFeed would be a real one:
            var componentUnderTest = new VS.UTFakes.StockAnalyzer(stockFeed);

            // Act:
            int actualValue = componentUnderTest.GetContosoPrice();

            // Assert:http://msdn.microsoft.com/en-us/library/hh549174.aspx
            Assert.AreEqual(1234, actualValue);
            Assert.AreEqual(1,componentUnderTest.GetIstockFeedPrice());
            componentUnderTest.SetIstockFeedPrice(2);
            Assert.AreEqual(2, componentUnderTest.GetIstockFeedPrice());
            Assert.AreEqual(5, componentUnderTest.GetGenericmethods());
        }

        /// <summary>
        /// Shim
        /// </summary>
        [TestMethod]
        [ExpectedException(typeof(ApplicationException))]
        public void TestCurrentYear()
        {
            using (ShimsContext.Create())
            {
                // fake系统的方法 DateTinme.Now
                System.Fakes.ShimDateTime.NowGet = () => { return new DateTime(1991, 1, 1); };
                componentUnderTest s = new componentUnderTest();
                Assert.AreEqual(1991, s.GetTheCurrentYear());

                System.Fakes.ShimDateTime.NowGet = () => { return new DateTime(2000, 1, 1); };
               //Y2KChecker.Check();

                // static class for all static
                VS.UTFakes.Fakes.ShimY2KChecker.return5=()=>{return 3;};
                Assert.AreEqual(3, Y2KChecker.return5());

                // Fake 类的一个方法。 For all Instance just like static class
                componentUnderTest s1 = new componentUnderTest();
                componentUnderTest s2 = new componentUnderTest();
                VS.UTFakes.Fakes.ShimcomponentUnderTest.AllInstances.GetTheCurrentYear = (componentUnderTest) => { return 1; };
                Assert.AreEqual(1,s1.GetTheCurrentYear());

                // for one each instance! oh,you donot believe!Yes, you cannot believe
                var ClassMethod1 = new VS.UTFakes.Fakes.ShimClassMethod()
                {
                    returnClassMethodName = () => { return "ClassMethod1"; },
                    
                };
                ClassMethod ClassMethod2 = new VS.UTFakes.Fakes.ShimClassMethod()
                {
                    returnClassMethodName = () => { return "ClassMethod2"; },

                };
                //doing here,you need cast ShimClassMethod to ClassMethod easy to do it.
                //maybe you will wonder why ShimClassMethod can cast ClassMethod,beacuse i can tell you!PS:i donot know.
                //mayne you put F12 see Definition of ShimClassMethod
                Assert.AreEqual("ClassMethod1", ClassMethod1.Instance.returnClassMethodName());
                Assert.AreEqual("ClassMethod2", ClassMethod2.returnClassMethodName());

                //To be continue http://msdn.microsoft.com/en-us/library/hh549176.aspx
                

            }
        }

    }
}
